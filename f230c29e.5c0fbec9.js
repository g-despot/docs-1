(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{172:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return o})),a.d(t,"toc",(function(){return p})),a.d(t,"default",(function(){return s}));var n=a(3),r=a(7),i=(a(0),a(180)),c={id:"connecting-applications",title:"Building applications",sidebar_label:"Building applications",slug:"/getting-started/connecting-applications"},o={unversionedId:"getting-started/connecting-applications/connecting-applications",id:"getting-started/connecting-applications/connecting-applications",isDocsHomePage:!1,title:"Building applications",description:"Quick start guides",source:"@site/docs/getting-started/connecting-applications/connecting-applications.md",slug:"/getting-started/connecting-applications",permalink:"/memgraph/getting-started/connecting-applications",editUrl:"https://github.com/memgraph/docs/tree/master/docs/getting-started/connecting-applications/connecting-applications.md",version:"current",sidebar_label:"Building applications",sidebar:"memgraph",previous:{title:"Querying the database",permalink:"/memgraph/getting-started/querying/querying"},next:{title:"Python quick start",permalink:"/memgraph/getting-started/connecting-applications/python"}},p=[{value:"Quick start guides",id:"quick-start-guides",children:[]},{value:"Supported Languages",id:"supported-languages",children:[]},{value:"Secure Sockets Layer (SSL) {#secure-sockets-layer}",id:"secure-sockets-layer-ssl-secure-sockets-layer",children:[]}],l={toc:p};function s(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(i.a)("h2",{id:"quick-start-guides"},"Quick start guides"),Object(i.a)("p",null,"The following guides describe how to create a simple ",Object(i.a)("strong",{parentName:"p"},Object(i.a)("inlineCode",{parentName:"strong"},"Hello, World!"))," program that connects to the Memgraph database and executes simple queries:"),Object(i.a)("ul",null,Object(i.a)("li",{parentName:"ul"},Object(i.a)("a",{parentName:"li",href:"/memgraph/getting-started/connecting-applications/python"},"Python")),Object(i.a)("li",{parentName:"ul"},Object(i.a)("a",{parentName:"li",href:"/memgraph/getting-started/connecting-applications/rust"},"Rust")),Object(i.a)("li",{parentName:"ul"},Object(i.a)("a",{parentName:"li",href:"/memgraph/getting-started/connecting-applications/c-sharp"},"c#")),Object(i.a)("li",{parentName:"ul"},Object(i.a)("a",{parentName:"li",href:"/memgraph/getting-started/connecting-applications/java"},"Java")),Object(i.a)("li",{parentName:"ul"},Object(i.a)("a",{parentName:"li",href:"/memgraph/getting-started/connecting-applications/go"},"Go")),Object(i.a)("li",{parentName:"ul"},Object(i.a)("a",{parentName:"li",href:"/memgraph/getting-started/connecting-applications/javascript"},"JavaScript"))),Object(i.a)("h2",{id:"supported-languages"},"Supported Languages"),Object(i.a)("p",null,"If users wish to query Memgraph programmatically, they can do so using the\n",Object(i.a)("a",{parentName:"p",href:"https://7687.org/"},"Bolt protocol"),". Bolt was designed for efficient\ncommunication with graph databases and ",Object(i.a)("strong",{parentName:"p"},"Memgraph supports versions 1 and 4"),"\nof the protocol. Bolt protocol drivers for some popular programming languages are listed below:"),Object(i.a)("ul",null,Object(i.a)("li",{parentName:"ul"},Object(i.a)("a",{parentName:"li",href:"https://github.com/neo4j/neo4j-dotnet-driver"},"C#")),Object(i.a)("li",{parentName:"ul"},Object(i.a)("a",{parentName:"li",href:"https://github.com/memgraph/mgclient"},"C/C++")),Object(i.a)("li",{parentName:"ul"},Object(i.a)("a",{parentName:"li",href:"https://github.com/neo4j/neo4j-go-driver"},"Go")),Object(i.a)("li",{parentName:"ul"},Object(i.a)("a",{parentName:"li",href:"https://github.com/zmactep/hasbolt"},"Haskell")),Object(i.a)("li",{parentName:"ul"},Object(i.a)("a",{parentName:"li",href:"https://github.com/neo4j/neo4j-java-driver"},"Java")),Object(i.a)("li",{parentName:"ul"},Object(i.a)("a",{parentName:"li",href:"https://github.com/neo4j/neo4j-javascript-driver"},"JavaScript")),Object(i.a)("li",{parentName:"ul"},Object(i.a)("a",{parentName:"li",href:"https://github.com/neo4j/neo4j-javascript-driver"},"Node.js")),Object(i.a)("li",{parentName:"ul"},Object(i.a)("a",{parentName:"li",href:"https://github.com/graphaware/neo4j-bolt-php"},"PHP")),Object(i.a)("li",{parentName:"ul"},Object(i.a)("a",{parentName:"li",href:"https://github.com/memgraph/pymgclient"},"Python")),Object(i.a)("li",{parentName:"ul"},Object(i.a)("a",{parentName:"li",href:"https://github.com/neo4jrb/neo4j"},"Ruby")),Object(i.a)("li",{parentName:"ul"},Object(i.a)("a",{parentName:"li",href:"https://github.com/memgraph/rsmgclient"},"Rust"))),Object(i.a)("h2",{id:"secure-sockets-layer-ssl-secure-sockets-layer"},"Secure Sockets Layer (SSL) {#secure-sockets-layer}"),Object(i.a)("p",null,"Secure connections are supported and disabled by default. The server initially\nships with a self-signed testing certificate. The certificate can be replaced\nby editing the following parameters in ",Object(i.a)("inlineCode",{parentName:"p"},"/etc/memgraph/memgraph.conf"),":"),Object(i.a)("pre",null,Object(i.a)("code",{parentName:"pre"},"--bolt-cert-file=/path/to/ssl/certificate.pem\n--bolt-key-file=/path/to/ssl/privatekey.pem\n")),Object(i.a)("p",null,"To disable SSL support and use insecure connections to the database you should\nset both parameters (",Object(i.a)("inlineCode",{parentName:"p"},"--bolt-cert-file")," and ",Object(i.a)("inlineCode",{parentName:"p"},"--bolt-key-file"),") to empty values."))}s.isMDXComponent=!0},180:function(e,t,a){"use strict";a.d(t,"a",(function(){return m}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=r.a.createContext({}),s=function(e){var t=r.a.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},g=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),g=s(a),m=n,b=g["".concat(c,".").concat(m)]||g[m]||u[m]||i;return a?r.a.createElement(b,o(o({ref:t},l),{},{components:a})):r.a.createElement(b,o({ref:t},l))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,c=new Array(i);c[0]=g;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:n,c[1]=o;for(var l=2;l<i;l++)c[l]=a[l];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,a)}g.displayName="MDXCreateElement"}}]);