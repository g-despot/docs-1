(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{124:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return p})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return d}));var a=t(3),r=t(7),i=(t(0),t(180)),o={id:"reading-and-writing",title:"Reading and writing",sidebar_label:"Reading and writing"},p={unversionedId:"reading-and-writing",id:"reading-and-writing",isDocsHomePage:!1,title:"Reading and writing",description:"OpenCypher supports combining multiple reads and writes using the",source:"@site/cypher-manual/reading-and-writing.md",slug:"/reading-and-writing",permalink:"/cypher-manual/reading-and-writing",editUrl:"https://github.com/memgraph/docs/tree/master/cypher-manual/reading-and-writing.md",version:"current",sidebar_label:"Reading and writing",sidebar:"cypher_manual",previous:{title:"Writing new data",permalink:"/cypher-manual/writing-new-data"},next:{title:"Functions",permalink:"/cypher-manual/functions"}},c=[{value:"WITH",id:"with",children:[]},{value:"MERGE",id:"merge",children:[]}],l={toc:c};function d(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(i.a)("wrapper",Object(a.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(i.a)("p",null,"OpenCypher supports combining multiple reads and writes using the\n",Object(i.a)("inlineCode",{parentName:"p"},"WITH")," clause. In addition to combining, the ",Object(i.a)("inlineCode",{parentName:"p"},"MERGE")," clause is provided which\nmay create patterns if they do not exist."),Object(i.a)("h2",{id:"with"},"WITH"),Object(i.a)("p",null,"The write part of the query cannot be simply followed by another read part. In\norder to combine them, ",Object(i.a)("inlineCode",{parentName:"p"},"WITH")," clause must be used. The names this clause\nestablishes are transferred from one part to another."),Object(i.a)("p",null,"For example, creating a node and finding all nodes with the same property."),Object(i.a)("pre",null,Object(i.a)("code",{parentName:"pre",className:"language-cypher"},"CREATE (node {property: 42}) WITH node.property AS propValue\nMATCH (n {property: propValue}) RETURN n;\n")),Object(i.a)("p",null,"Note that the ",Object(i.a)("inlineCode",{parentName:"p"},"node")," is not visible after ",Object(i.a)("inlineCode",{parentName:"p"},"WITH"),", since only ",Object(i.a)("inlineCode",{parentName:"p"},"node.property"),"\nwas carried over."),Object(i.a)("p",null,"This clause behaves very much like ",Object(i.a)("inlineCode",{parentName:"p"},"RETURN"),", so you should refer to features\nof ",Object(i.a)("inlineCode",{parentName:"p"},"RETURN"),"."),Object(i.a)("h2",{id:"merge"},"MERGE"),Object(i.a)("p",null,"The ",Object(i.a)("inlineCode",{parentName:"p"},"MERGE")," clause is used to ensure that a pattern you are looking for exists\nin the database. This means that if the pattern is not found, it will be\ncreated. In a way, this clause is like a combination of ",Object(i.a)("inlineCode",{parentName:"p"},"MATCH")," and ",Object(i.a)("inlineCode",{parentName:"p"},"CREATE"),"."),Object(i.a)("p",null,"Example. Ensure that a person has at least one friend."),Object(i.a)("pre",null,Object(i.a)("code",{parentName:"pre",className:"language-cypher"},"MATCH (n :Person) MERGE (n)-[:FriendOf]->(m);\n")),Object(i.a)("p",null,"The clause also provides additional features for updating the values depending\non whether the pattern was created or matched. This is achieved with ",Object(i.a)("inlineCode",{parentName:"p"},"ON\nCREATE")," and ",Object(i.a)("inlineCode",{parentName:"p"},"ON MATCH")," sub clauses."),Object(i.a)("p",null,"Example. Set a different properties depending on what ",Object(i.a)("inlineCode",{parentName:"p"},"MERGE")," did."),Object(i.a)("pre",null,Object(i.a)("code",{parentName:"pre",className:"language-cypher"},'MATCH (n :Person) MERGE (n)-[:FriendOf]->(m)\nON CREATE SET m.prop = "created" ON MATCH SET m.prop = "existed";\n')),Object(i.a)("p",null,"For more details, click ",Object(i.a)("a",{parentName:"p",href:"/cypher-manual/clauses/merge"},"this\nlink"),"."))}d.isMDXComponent=!0},180:function(e,n,t){"use strict";t.d(n,"a",(function(){return m}));var a=t(0),r=t.n(a);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=r.a.createContext({}),d=function(e){var n=r.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},u=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=d(t),m=a,b=u["".concat(o,".").concat(m)]||u[m]||s[m]||i;return t?r.a.createElement(b,p(p({ref:n},l),{},{components:t})):r.a.createElement(b,p({ref:n},l))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=u;var p={};for(var c in n)hasOwnProperty.call(n,c)&&(p[c]=n[c]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var l=2;l<i;l++)o[l]=t[l];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);