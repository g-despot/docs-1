(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{145:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return l})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return s}));var r=t(3),a=t(7),i=(t(0),t(180)),o={id:"differences",title:"Differences",sidebar_label:"Differences"},l={unversionedId:"differences",id:"differences",isDocsHomePage:!1,title:"Differences",description:"Although we try to implement openCypher query language as closely to the",source:"@site/cypher-manual/differences.md",slug:"/differences",permalink:"/cypher-manual/differences",editUrl:"https://github.com/memgraph/docs/tree/master/cypher-manual/differences.md",version:"current",sidebar_label:"Differences",sidebar:"cypher_manual",previous:{title:"Other features",permalink:"/cypher-manual/other-features"}},c=[{value:"Unicode codepoints in string literals",id:"unicode-codepoints-in-string-literals",children:[]},{value:"Difference from Neo4j&#39;s Cypher implementation",id:"difference-from-neo4js-cypher-implementation",children:[{value:"Unsupported constructs",id:"unsupported-constructs",children:[]},{value:"Unsupported functions",id:"unsupported-functions",children:[]}]}],p={toc:c};function s(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.a)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(i.a)("p",null,"Although we try to implement ",Object(i.a)("a",{parentName:"p",href:"https://www.opencypher.org/"},"openCypher")," query language as closely to the\nlanguage reference as possible, we had to make some changes to enhance the\nuser experience."),Object(i.a)("h2",{id:"unicode-codepoints-in-string-literals"},"Unicode codepoints in string literals"),Object(i.a)("p",null,"Use ",Object(i.a)("inlineCode",{parentName:"p"},"\\u")," followed by 4 hex digits in string literals for UTF-16 codepoint and\n",Object(i.a)("inlineCode",{parentName:"p"},"\\U")," with 8 hex digits for UTF-32 codepoint in Memgraph."),Object(i.a)("h2",{id:"difference-from-neo4js-cypher-implementation"},"Difference from Neo4j's Cypher implementation"),Object(i.a)("p",null,"The openCypher initiative stems from Neo4j's Cypher query language. Following is a list\nof most important differences between Neo's Cypher and Memgraph's openCypher implementation,\nfor users that are already familiar with Neo4j. There might be other differences not documented\nhere (especially subtle semantic ones)."),Object(i.a)("h3",{id:"unsupported-constructs"},"Unsupported constructs"),Object(i.a)("ul",null,Object(i.a)("li",{parentName:"ul"},"Data importing. Memgraph doesn't support Cypher's CSV importing capabilities."),Object(i.a)("li",{parentName:"ul"},"The ",Object(i.a)("inlineCode",{parentName:"li"},"FOREACH")," language construct for performing an operation on every list element."),Object(i.a)("li",{parentName:"ul"},"Stored procedures."),Object(i.a)("li",{parentName:"ul"},Object(i.a)("inlineCode",{parentName:"li"},"shortestPath")," and ",Object(i.a)("inlineCode",{parentName:"li"},"allShortestPaths")," functions. ",Object(i.a)("inlineCode",{parentName:"li"},"shortestPath")," can be expressed using\nMemgraph's breadth-first expansion syntax already described in this document."),Object(i.a)("li",{parentName:"ul"},"Patterns in expressions. For example, Memgraph doesn't support ",Object(i.a)("inlineCode",{parentName:"li"},"size((n)--\x3e())"),". Most of the time\nthe same functionalities can be expressed differently in Memgraph using ",Object(i.a)("inlineCode",{parentName:"li"},"OPTIONAL")," expansions,\nfunction calls etc."),Object(i.a)("li",{parentName:"ul"},"Map projections such as ",Object(i.a)("inlineCode",{parentName:"li"},"MATCH (n) RETURN n {.property1, .property2}"),".")),Object(i.a)("h3",{id:"unsupported-functions"},"Unsupported functions"),Object(i.a)("p",null,"General purpose functions:"),Object(i.a)("ul",null,Object(i.a)("li",{parentName:"ul"},Object(i.a)("inlineCode",{parentName:"li"},"exists(n.property)")," - This can be expressed using ",Object(i.a)("inlineCode",{parentName:"li"},"n.property IS NOT NULL"),"."),Object(i.a)("li",{parentName:"ul"},Object(i.a)("inlineCode",{parentName:"li"},"length()")," is named ",Object(i.a)("inlineCode",{parentName:"li"},"size()")," in Memgraph.")),Object(i.a)("p",null,"Aggregation functions:"),Object(i.a)("ul",null,Object(i.a)("li",{parentName:"ul"},Object(i.a)("inlineCode",{parentName:"li"},"count(DISTINCT variable)")," - This can be expressed using ",Object(i.a)("inlineCode",{parentName:"li"},"WITH DISTINCT variable RETURN count(variable)"),".")),Object(i.a)("p",null,"Mathematical functions:"),Object(i.a)("ul",null,Object(i.a)("li",{parentName:"ul"},Object(i.a)("inlineCode",{parentName:"li"},"percentileDisc()")),Object(i.a)("li",{parentName:"ul"},Object(i.a)("inlineCode",{parentName:"li"},"stDev()")),Object(i.a)("li",{parentName:"ul"},Object(i.a)("inlineCode",{parentName:"li"},"point()")),Object(i.a)("li",{parentName:"ul"},Object(i.a)("inlineCode",{parentName:"li"},"distance()")),Object(i.a)("li",{parentName:"ul"},Object(i.a)("inlineCode",{parentName:"li"},"degrees()"))),Object(i.a)("p",null,"List functions:"),Object(i.a)("ul",null,Object(i.a)("li",{parentName:"ul"},Object(i.a)("inlineCode",{parentName:"li"},"any()")),Object(i.a)("li",{parentName:"ul"},Object(i.a)("inlineCode",{parentName:"li"},"none()"))))}s.isMDXComponent=!0},180:function(e,n,t){"use strict";t.d(n,"a",(function(){return d}));var r=t(0),a=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=a.a.createContext({}),s=function(e){var n=a.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},m=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=s(t),d=r,f=m["".concat(o,".").concat(d)]||m[d]||u[d]||i;return t?a.a.createElement(f,l(l({ref:n},p),{},{components:t})):a.a.createElement(f,l({ref:n},p))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=t[p];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);